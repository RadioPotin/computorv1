(* Parser for computorv1, generated by menhir *)

%token EOF
%token EQ
%token PLUS
%token STAR
%token MINUS
%token<string> VAR
%token<int> INT
%token<float> FLOAT
%token CIRCUM

%start <Ast.equation> equation

%%
  equation:
  | pl = polynome EQ pr = polynome EOF {(pl, pr)}

    polynome:
  | pl = polynome PLUS pr = polynome {Ast.Add (pl, pr)}
| pl = polynome MINUS pr = polynome {Ast.Sub (pl, pr)}
| m = monome {Ast.Mon m}

%inline monome:
    | f = FLOAT option(STAR) v = VAR CIRCUM p = INT {Ast.Term (f, v, p)}
| i = INT option(STAR) v = VAR CIRCUM p = INT {Ast.Term ((float_of_int i), v, p)}
| f = FLOAT option(STAR) v = VAR {Ast.Term (f, v, 1)}
| i = INT option(STAR) v = VAR {Ast.Term ((float_of_int i), v, 1)}
| v = VAR CIRCUM i = INT {Ast.Term (1., v, i)}
| f = FLOAT {Ast.Const f}
| i = INT {Ast.Const (float_of_int i)}
| v = VAR {Ast.Term (1., v, 1)}
